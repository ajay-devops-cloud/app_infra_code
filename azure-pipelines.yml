trigger: none

pool: apna-agent-pool
variables:
  configuepath: '$(System.DefaultWorkingDirectory)/environment/dev'

stages:
# Stage 1: Terraform Init & Plan
- stage: init_and_plan
  jobs:
    - job: terraform_plan
      steps:
        - task: TerraformTaskV4@4
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(configuepath)'
            backendAzureRmResourceGroupName: 'rg-it'
            backendServiceArm: 'next-level-service-connection'
            backendAzureRmStorageAccountName: 'itsolution'
            backendAzureRmContainerName: 'nextlevelcontainer'
            backendAzureRmKey: 'itit.tfstate'

        - task: TerraformTaskV4@4
          inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: '$(configuepath)'
            environmentServiceNameAzureRM: 'next-level-service-connection'

# Stage 2: Terraform Apply with Approval
- stage: Apply
  dependsOn: init_and_plan
  jobs:
    - deployment: terraform_apply
      environment: 'dev-terraform-apply' # UI me environment create karke approval configure karein
      strategy:
        runOnce:
          deploy:
            steps:
              - task: TerraformTaskV4@4
                inputs:
                  provider: 'azurerm'
                  command: 'apply'
                  workingDirectory: '$(configuepath)'
                  environmentServiceNameAzureRM: 'next-level-service-connection'
- stage: destroy
  jobs: 
    - job: terraform_destroy
      steps:
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
          backendAzureRmResourceGroupName: 'rg-it'
          backendServiceArm: 'next-level-service-connection'
          backendAzureRmStorageAccountName: 'itsolution'
          backendAzureRmContainerName: 'nextlevelcontainer'
          backendAzureRmKey: 'itit.tfstate'

      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
          environmentServiceNameAzureRM: 'next-level-service-connection'
