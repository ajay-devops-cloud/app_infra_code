trigger:
  branches:
    include:
     - main
     - feature/*
parameters:
  - name: environment
    displayName: environment (dev/prod)
    type: string
    values:
      - dev
      - prod

pool: Apna-agent-pool
variables:
  SYSTEM_DEFAULT_WORKDIR: '/azp/_work/1/s'
  CONFIG_PATH: '/azp/_work/1/s/environment/${{ parameters.environment }}'
stages:
# Stage 1: Terraform Init & Plan
- stage: init_and_plan
  jobs:
    - job: terraform_plan
      steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'
      - script: |
          echo "##vso[task.prependpath]/azp/_work/_tool/terraform/1.13.1/x64"
        displayName: 'Add Terraform to PATH'
      - task: TerraformTaskV4@4
        inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(CONFIG_PATH)'
            backendAzureRmResourceGroupName: 'rg-it'
            backendServiceArm: 'next-level-service-connection'
            backendAzureRmStorageAccountName: 'itsolution1'
            backendAzureRmContainerName: 'nextlevelcontainer'
            backendAzureRmKey: '${{ parameters.environment }}.itit.tfstate'
            
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(CONFIG_PATH)'
          environmentServiceNameAzureRM: 'next-level-service-connection'
          
# Stage 2: Scanning 
- stage: Scanning
  displayName: security scanning
  jobs:
    - job:
      displayName: scanning wala job
      steps:
      - task: trivy@2
        inputs:
          version: 'latest'
          type: 'filesystem'
          target: '$(CONFIG_PATH)'
          publish: true

# Stage 3: Manual Validation stage
- stage: manual_validation
  displayName: Manual validation
  jobs:
    - job:
      displayName: Manual validation
      pool: server
      steps:
      - task: ManualValidation@1
        inputs:
          notifyUsers: 'ajaykumaryadav97@gmail.com'
          approvers: 'ajaykumaryadav97@gmail.com'
          instructions: 'Approval do sir'
          onTimeout: 'resume'

# Stage 4: Terraform Apply with Approval
- stage: deploy
  dependsOn: manual_validation
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
    - job: terraformapply
      displayName: terraform apply
      pool: Apna-agent-pool
      steps:
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(CONFIG_PATH)'
          backendAzureRmResourceGroupName: 'rg-it'
          backendServiceArm: 'next-level-service-connection'
          backendAzureRmStorageAccountName: 'itsolution1'
          backendAzureRmContainerName: 'nextlevelcontainer'
          backendAzureRmKey: '${{ parameters.environment }}.itit.tfstate'
          
      - task: TerraformTaskV4@4
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(CONFIG_PATH)'
          environmentServiceNameAzureRM: 'next-level-service-connection'

